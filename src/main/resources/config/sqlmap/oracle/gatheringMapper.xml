<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gathering.dao.GatheringDAO">
	<resultMap type="gatheringVO" id="gatheringMap">
		<result column="safe_account_no" property="safeAccountNo" />
		<result column="account_no" property="accountNo" />
		<result column="start_date" property="startDate" />
	</resultMap>
	
	<insert id="insertGathering" parameterType="gatheringVO">
		insert into gathering
		values(#{safeAccountNo}, #{accountNo}, #{name}, #{password} 
				, #{balance}, #{tagS}, #{tagL}, sysdate, #{id})
	</insert>	
	
	<select id="selectByAccountNo" resultType="gatheringVO" parameterType="String">
		select account_no as accountNo, safe_account_no as safeAccountNo, name, id,
			start_date as startDate
		from gathering
		where account_no = #{accountNo}		
	</select>
	
	<!-- 아이디로 참여하고 있는 모든 모임통장 정보 조회 -->
	<select id="selectParticipatingGatheringList" resultMap="gatheringMap" parameterType="memberVO">
		select safe_account_no, account_no, name, balance, tagS, tagL, start_date, id
			from gathering
			where account_no in 
				(select account_no
					from participant
						where id = #{id})	
	</select>
	
	<!-- 안심계좌번호로 모임통장 정보 조회 -->
	<select id="selectBySafeAccountNo" resultMap="gatheringMap" parameterType="gatheringVO">
		select safe_account_no, account_no, name, balance, tagS, tagL, start_date, id
			from gathering
				where safe_account_no = #{safeAccountNo}
	</select>
	
	<!-- 모임주로 있는 모임통장 정보만 조회 -->
	<select id="selectOwnedGatheringById" resultMap="gatheringMap" parameterType="memberVO">
		select safe_account_no, account_no, name, balance
			from gathering
				where id = #{id}
	</select>
	
	<!-- 출금 -->
	<update id="withdraw" parameterType="transactionVO">
		update gathering
			set balance = balance - #{ amount }
				where account_no = #{ accountNo }
	</update>
	
	<!-- 입금 -->
	<update id="deposit" parameterType="transactionVO">
		update gathering
			set balance = balance + #{ amount }
				where account_no = #{ accountNo }
	</update>
	
	<!-- 스케쥴러 -->
	
	<!-- 모임통장 종료 스케쥴 -->
	<!-- 오늘이 종료일인 모임통장의 정보 알아오기(별칭, 안심계좌번호) -->
	<select id="accountTodayTerminateDate" resultType="gatheringVO">
 		select account_no as accountNo, name, safe_account_no as safeAccountNo
			from gathering
				where account_no in
						(select account_no 
							from scheduled_end
								where TO_CHAR(end_date,'YY/MM/DD') 
									<![CDATA[ <= ]]> 
										TO_CHAR(SYSDATE,'YY/MM/DD'))	
	</select>	
	
	<!-- 모임통장 테이블에서 데이터 삭제  -->
	<delete id="deleteGathering">
		delete from gathering
		where account_no
					in (select account_no 
							from scheduled_end
								where TO_CHAR(end_date,'YY/MM/DD') 
										<![CDATA[ <= ]]> 
											TO_CHAR(SYSDATE,'YY/MM/DD'))
	</delete>
	
	<!-- 회비입금일 알림 스케쥴 -->
	<!-- 오늘 회비 입금일인 모임통장의 정보 알아오기(별칭, 안심계좌번호) -->
	<select id="accountTodayDepositDate" resultType="gatheringVO">
 		select account_no as accountNo, name, safe_account_no as safeAccountNo
			from gathering
				where account_no in
						(select account_no 
							from Scheduled_deposit_date 
								where regular_day = to_number(to_char(sysdate, 'dd')))
				order by account_no	
	</select>
		
</mapper>